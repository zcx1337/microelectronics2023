HIF003
--
-- Copyright (C) 1988-1998 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	declut.tdf
	{
		declut [LATENCY,TOT_LEVELS,STAGE,width,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,bypassff.inc]
		{
			20 [LATENCY=0,TOT_LEVELS=1,STAGE=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data2,data1,data0,enable];
		}
	}
	cmpchain.tdf
	{
		cmpchain [DEVICE_FAMILY,CASCADE_CHAIN_LENGTH,CARRY_CHAIN_LENGTH,CASCADE_CHAIN,CARRY_CHAIN,MODE,ONE_INPUT_CONSTANT,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc,aglobal.inc]
		{
			17 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa1,dataa0,datab1,datab0];
			15 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=0,lpm_width=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa0,datab0];
			14 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=0,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa1,dataa0,datab1,datab0];
			12 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=0,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
		}
	}
	comptree.tdf
	{
		comptree [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=8,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc,cmpchain.inc,lpm_constant.inc]
		{
			16 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa1,dataa0,datab1,datab0];
			13 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			11 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=8,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
		}
	}
	muxlut.tdf
	{
		muxlut [CASCADE_CHAIN,LOCAL=0,REM_LATENCY,LATENCY,TOT_LEVELS,LEVEL,SIZE,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,altshift.inc]
		{
			25 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=1,LEVEL=0,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
			6 [CASCADE_CHAIN=IGNORE,LOCAL=1,LATENCY=0,TOT_LEVELS=2,LEVEL=1,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
			5 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=2,LEVEL=0,SIZE=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data3,data2,data1,data0,select1,select0];
			4 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=2,LEVEL=1,SIZE=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data7,data6,data5,data4,data3,data2,data1,data0,select2,select1,select0];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			24 [DEPTH=0,WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,data2,data1,data0];
			18 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			3 [DEPTH=0,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7,data6,data5,data4,data3,data2,data1,data0];
		}
	}
	bypassff.tdf
	{
		bypassff [WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			2 [WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q2,d2,d1,d0];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [LPM_PIPELINE=0,LPM_WIDTHS,LPM_SIZE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,bypassff.inc,altshift.inc]
		{
			23 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,data1_2,data1_1,data1_0,data0_2,data0_1,data0_0,sel0];
			1 [LPM_PIPELINE=0,LPM_WIDTHS=3,LPM_SIZE=8,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data0_6,data0_7,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,data1_6,data1_7,data2_0,data2_1,data2_2,data2_3,data2_4,data2_5,data2_6,data2_7,data3_0,data3_1,data3_2,data3_3,data3_4,data3_5,data3_6,data3_7,data4_0,data4_1,data4_2,data4_3,data4_4,data4_5,data4_6,data4_7,data5_0,data5_1,data5_2,data5_3,data5_4,data5_5,data5_6,data5_7,data6_0,data6_1,data6_2,data6_3,data6_4,data6_5,data6_6,data6_7,data7_0,data7_1,data7_2,data7_3,data7_4,data7_5,data7_6,data7_7,sel0,sel1,sel2,result0,result1,result2,result3,result4,result5,result6,result7];
		}
	}
	dtrigger8x.gdf
	{
		dtrigger8x [] []
		{
			8 [] [];
		}
	}
	dtrigger3x.gdf
	{
		dtrigger3x [] []
		{
			9 [] [];
		}
	}
	lpm_compare.tdf
	{
		lpm_compare [DEVICE_FAMILY=FLEX8000,CASCADE_CHAIN_LENGTH=8,CARRY_CHAIN_LENGTH=8,CASCADE_CHAIN=MANUAL,CARRY_CHAIN=MANUAL,ONE_INPUT_IS_CONSTANT=NO,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=UNSIGNED,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc,altshift.inc,aglobal.inc]
		{
			10 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=NO,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=UNSIGNED,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,datab0,datab1,datab2,dataa0,dataa1,dataa2];
		}
	}
	cacheelement.gdf
	{
		cacheelement [] []
		{
			7 [] [];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [DEVICE_FAMILY,CASCADE_CHAIN,LPM_PIPELINE=0,LPM_DECODES,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,altshift.inc,lpm_compare.inc,lpm_constant.inc,aglobal.inc]
		{
			19 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN=IGNORE,LPM_PIPELINE=0,LPM_DECODES=8,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7,data0,data1,data2,enable];
		}
	}
	coderv2.gdf
	{
		coderv2 [] []
		{
			21 [] [];
		}
	}
	busmux.tdf
	{
		busmux [WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc]
		{
			22 [WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [dataa0,dataa1,dataa2,sel,datab0,datab1,datab2,result0,result1,result2];
		}
	}
	cache.gdf
	{
		cache [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	cache::(0,0):(0): cache.gdf
	{
		lpm_mux::(0,0):(17): lpm_mux.tdf
		{
			bypassff:2:(82,17):(104,sel_latency_ff0): bypassff.tdf;
			altshift:3:(88,2):(114,external_latency_ffs): altshift.tdf;
			muxlut:4:(167,21):(135): muxlut.tdf
			{
				muxlut:5:(207,27):(43): muxlut.tdf;
				muxlut:5:(207,27):(60): muxlut.tdf;
				muxlut:6:(230,21):(77): muxlut.tdf;
			}
			muxlut:4:(167,21):(156): muxlut.tdf
			{
				muxlut:5:(207,27):(43): muxlut.tdf;
				muxlut:5:(207,27):(60): muxlut.tdf;
				muxlut:6:(230,21):(77): muxlut.tdf;
			}
			muxlut:4:(167,21):(177): muxlut.tdf
			{
				muxlut:5:(207,27):(43): muxlut.tdf;
				muxlut:5:(207,27):(60): muxlut.tdf;
				muxlut:6:(230,21):(77): muxlut.tdf;
			}
			muxlut:4:(167,21):(198): muxlut.tdf
			{
				muxlut:5:(207,27):(43): muxlut.tdf;
				muxlut:5:(207,27):(60): muxlut.tdf;
				muxlut:6:(230,21):(77): muxlut.tdf;
			}
			muxlut:4:(167,21):(219): muxlut.tdf
			{
				muxlut:5:(207,27):(43): muxlut.tdf;
				muxlut:5:(207,27):(60): muxlut.tdf;
				muxlut:6:(230,21):(77): muxlut.tdf;
			}
			muxlut:4:(167,21):(240): muxlut.tdf
			{
				muxlut:5:(207,27):(43): muxlut.tdf;
				muxlut:5:(207,27):(60): muxlut.tdf;
				muxlut:6:(230,21):(77): muxlut.tdf;
			}
			muxlut:4:(167,21):(261): muxlut.tdf
			{
				muxlut:5:(207,27):(43): muxlut.tdf;
				muxlut:5:(207,27):(60): muxlut.tdf;
				muxlut:6:(230,21):(77): muxlut.tdf;
			}
			muxlut:4:(167,21):(282): muxlut.tdf
			{
				muxlut:5:(207,27):(43): muxlut.tdf;
				muxlut:5:(207,27):(60): muxlut.tdf;
				muxlut:6:(230,21):(77): muxlut.tdf;
			}
		}
		cacheelement::(0,0):(120): cacheelement.gdf
		{
			dtrigger8x:8:(0,0):(3): dtrigger8x.gdf;
			dtrigger3x:9:(0,0):(9): dtrigger3x.gdf;
			lpm_compare:10:(0,0):(10): lpm_compare.tdf
			{
				comptree:11:(283,3):(41,comparator): comptree.tdf
				{
					cmpchain:12:(176,5):(37,cmp_end): cmpchain.tdf
					{
						comptree:13:(139,7):(37,comp): comptree.tdf
						{
							cmpchain:14:(136,7):(37,cmp0): cmpchain.tdf;
							cmpchain:15:(143,5):(49,cmp_end): cmpchain.tdf;
							comptree:16:(162,4):(59,sub_comptree): comptree.tdf
							{
								cmpchain:17:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:18:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:18:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		cacheelement::(0,0):(25): cacheelement.gdf
		{
			dtrigger8x:8:(0,0):(3): dtrigger8x.gdf;
			dtrigger3x:9:(0,0):(9): dtrigger3x.gdf;
			lpm_compare:10:(0,0):(10): lpm_compare.tdf
			{
				comptree:11:(283,3):(41,comparator): comptree.tdf
				{
					cmpchain:12:(176,5):(37,cmp_end): cmpchain.tdf
					{
						comptree:13:(139,7):(37,comp): comptree.tdf
						{
							cmpchain:14:(136,7):(37,cmp0): cmpchain.tdf;
							cmpchain:15:(143,5):(49,cmp_end): cmpchain.tdf;
							comptree:16:(162,4):(59,sub_comptree): comptree.tdf
							{
								cmpchain:17:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:18:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:18:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		cacheelement::(0,0):(26): cacheelement.gdf
		{
			dtrigger8x:8:(0,0):(3): dtrigger8x.gdf;
			dtrigger3x:9:(0,0):(9): dtrigger3x.gdf;
			lpm_compare:10:(0,0):(10): lpm_compare.tdf
			{
				comptree:11:(283,3):(41,comparator): comptree.tdf
				{
					cmpchain:12:(176,5):(37,cmp_end): cmpchain.tdf
					{
						comptree:13:(139,7):(37,comp): comptree.tdf
						{
							cmpchain:14:(136,7):(37,cmp0): cmpchain.tdf;
							cmpchain:15:(143,5):(49,cmp_end): cmpchain.tdf;
							comptree:16:(162,4):(59,sub_comptree): comptree.tdf
							{
								cmpchain:17:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:18:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:18:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		cacheelement::(0,0):(32): cacheelement.gdf
		{
			dtrigger8x:8:(0,0):(3): dtrigger8x.gdf;
			dtrigger3x:9:(0,0):(9): dtrigger3x.gdf;
			lpm_compare:10:(0,0):(10): lpm_compare.tdf
			{
				comptree:11:(283,3):(41,comparator): comptree.tdf
				{
					cmpchain:12:(176,5):(37,cmp_end): cmpchain.tdf
					{
						comptree:13:(139,7):(37,comp): comptree.tdf
						{
							cmpchain:14:(136,7):(37,cmp0): cmpchain.tdf;
							cmpchain:15:(143,5):(49,cmp_end): cmpchain.tdf;
							comptree:16:(162,4):(59,sub_comptree): comptree.tdf
							{
								cmpchain:17:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:18:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:18:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		cacheelement::(0,0):(31): cacheelement.gdf
		{
			dtrigger8x:8:(0,0):(3): dtrigger8x.gdf;
			dtrigger3x:9:(0,0):(9): dtrigger3x.gdf;
			lpm_compare:10:(0,0):(10): lpm_compare.tdf
			{
				comptree:11:(283,3):(41,comparator): comptree.tdf
				{
					cmpchain:12:(176,5):(37,cmp_end): cmpchain.tdf
					{
						comptree:13:(139,7):(37,comp): comptree.tdf
						{
							cmpchain:14:(136,7):(37,cmp0): cmpchain.tdf;
							cmpchain:15:(143,5):(49,cmp_end): cmpchain.tdf;
							comptree:16:(162,4):(59,sub_comptree): comptree.tdf
							{
								cmpchain:17:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:18:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:18:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		cacheelement::(0,0):(123): cacheelement.gdf
		{
			dtrigger8x:8:(0,0):(3): dtrigger8x.gdf;
			dtrigger3x:9:(0,0):(9): dtrigger3x.gdf;
			lpm_compare:10:(0,0):(10): lpm_compare.tdf
			{
				comptree:11:(283,3):(41,comparator): comptree.tdf
				{
					cmpchain:12:(176,5):(37,cmp_end): cmpchain.tdf
					{
						comptree:13:(139,7):(37,comp): comptree.tdf
						{
							cmpchain:14:(136,7):(37,cmp0): cmpchain.tdf;
							cmpchain:15:(143,5):(49,cmp_end): cmpchain.tdf;
							comptree:16:(162,4):(59,sub_comptree): comptree.tdf
							{
								cmpchain:17:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:18:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:18:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		cacheelement::(0,0):(122): cacheelement.gdf
		{
			dtrigger8x:8:(0,0):(3): dtrigger8x.gdf;
			dtrigger3x:9:(0,0):(9): dtrigger3x.gdf;
			lpm_compare:10:(0,0):(10): lpm_compare.tdf
			{
				comptree:11:(283,3):(41,comparator): comptree.tdf
				{
					cmpchain:12:(176,5):(37,cmp_end): cmpchain.tdf
					{
						comptree:13:(139,7):(37,comp): comptree.tdf
						{
							cmpchain:14:(136,7):(37,cmp0): cmpchain.tdf;
							cmpchain:15:(143,5):(49,cmp_end): cmpchain.tdf;
							comptree:16:(162,4):(59,sub_comptree): comptree.tdf
							{
								cmpchain:17:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:18:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:18:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		cacheelement::(0,0):(121): cacheelement.gdf
		{
			dtrigger8x:8:(0,0):(3): dtrigger8x.gdf;
			dtrigger3x:9:(0,0):(9): dtrigger3x.gdf;
			lpm_compare:10:(0,0):(10): lpm_compare.tdf
			{
				comptree:11:(283,3):(41,comparator): comptree.tdf
				{
					cmpchain:12:(176,5):(37,cmp_end): cmpchain.tdf
					{
						comptree:13:(139,7):(37,comp): comptree.tdf
						{
							cmpchain:14:(136,7):(37,cmp0): cmpchain.tdf;
							cmpchain:15:(143,5):(49,cmp_end): cmpchain.tdf;
							comptree:16:(162,4):(59,sub_comptree): comptree.tdf
							{
								cmpchain:17:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:18:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:18:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		lpm_decode::(0,0):(30): lpm_decode.tdf
		{
			altshift:3:(75,2):(41,external_latency_ffs): altshift.tdf;
			declut:20:(94,5):(62,decoder): declut.tdf;
		}
		coderv2::(0,0):(158): coderv2.gdf;
		busmux::(0,0):(159): busmux.tdf
		{
			lpm_mux:23:(47,13):(37): lpm_mux.tdf
			{
				altshift:24:(88,2):(39,external_latency_ffs): altshift.tdf;
				muxlut:25:(167,21):(50): muxlut.tdf;
				muxlut:25:(167,21):(63): muxlut.tdf;
				muxlut:25:(167,21):(76): muxlut.tdf;
			}
		}
	}
}
